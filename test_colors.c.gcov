        -:    0:Source:test/src/test_colors.c
        -:    0:Graph:test/obj/Debug/test_colors.gcno
        -:    0:Data:test/obj/Debug/test_colors.gcda
        -:    0:Runs:4
        -:    1:#include <criterion/criterion.h>
        -:    2:#include "../../inc/colors.h"
        -:    3:
        2:    4:void initColors(void) {
        -:    5:
        2:    6:}
        -:    7:
        2:    8:void finiColors(void) {
        -:    9:    
        2:   10:}
        -:   11:
        -:   12:TestSuite(colors, .init = initColors, .fini = finiColors);
        -:   13:
        2:   14:Test(colors, rainbow) {
        1:   15:    char dst[32][32] = {0};
        -:   16:   
        1:   17:    char* msg = " シミリー ";
        -:   18:
        1:   19:    for(
        1:   20:        simile_TERM_COLOR c = simile_BLACK;
        9:   21:        c <= simile_WHITE;
        8:   22:        c++
        -:   23:    ) {
      264:   24:        for(int mod = 0; mod <= (simile_TERM_COLOR_MOD_BG | simile_TERM_COLOR_MOD_BRIGHT | simile_TERM_COLOR_MOD_ULINE | simile_TERM_COLOR_MOD_BOLD | simile_TERM_COLOR_MOD_INVRT); mod++) {
      256:   25:            printf("%s", simile_colorizeString(dst[mod], msg, 32, c, mod));
      256:   26:            if(mod % 4 == 3) {
       64:   27:                printf("\n");
        -:   28:            }
        -:   29:        }
        -:   30:    }        
       1*:   31:    cr_assert(1);
        1:   32:}
------------------
colors_rainbow_impl:
        1:   14:Test(colors, rainbow) {
        1:   15:    char dst[32][32] = {0};
        -:   16:   
        1:   17:    char* msg = " シミリー ";
        -:   18:
        1:   19:    for(
        1:   20:        simile_TERM_COLOR c = simile_BLACK;
        9:   21:        c <= simile_WHITE;
        8:   22:        c++
        -:   23:    ) {
      264:   24:        for(int mod = 0; mod <= (simile_TERM_COLOR_MOD_BG | simile_TERM_COLOR_MOD_BRIGHT | simile_TERM_COLOR_MOD_ULINE | simile_TERM_COLOR_MOD_BOLD | simile_TERM_COLOR_MOD_INVRT); mod++) {
      256:   25:            printf("%s", simile_colorizeString(dst[mod], msg, 32, c, mod));
      256:   26:            if(mod % 4 == 3) {
       64:   27:                printf("\n");
        -:   28:            }
        -:   29:        }
        -:   30:    }        
       1*:   31:    cr_assert(1);
        1:   32:}
------------------
colors_rainbow_jmp:
        1:   14:Test(colors, rainbow) {
------------------
        -:   33:
        2:   34:Test(colors, nesting) {
        1:   35:    char dst[2][32] = {0};
        9:   36:    for(int i = 0; i < 8; i++) {
        8:   37:        printf(
        -:   38:            "%s",
        -:   39:            simile_colorizeString(
        -:   40:                dst[0],
        -:   41:                simile_colorizeString(
        -:   42:                    dst[0],
        -:   43:                    " シミリー ",
        -:   44:                    32,
        -:   45:                    i,
        -:   46:                    simile_TERM_COLOR_MOD_ULINE 
        -:   47:                ),
        -:   48:                32,
        8:   49:                7-i,
        -:   50:                simile_TERM_COLOR_MOD_BG
        -:   51:            )
        -:   52:        );
        8:   53:        printf(
        -:   54:            "%s\n",
        -:   55:            simile_colorizeString(
        -:   56:                dst[1],
        -:   57:                simile_colorizeString(
        -:   58:                    dst[1],
        -:   59:                    " シミリー ",
        -:   60:                    32,
        8:   61:                    7-i,
        -:   62:                    0
        -:   63:                ),
        -:   64:                32,
        -:   65:                i,
        -:   66:                (simile_TERM_COLOR_MOD_BG | simile_TERM_COLOR_MOD_BRIGHT)
        -:   67:            )
        -:   68:
        -:   69:        );
        -:   70:    }
       1*:   71:    cr_assert(1);
        1:   72:}
------------------
colors_nesting_impl:
        1:   34:Test(colors, nesting) {
        1:   35:    char dst[2][32] = {0};
        9:   36:    for(int i = 0; i < 8; i++) {
        8:   37:        printf(
        -:   38:            "%s",
        -:   39:            simile_colorizeString(
        -:   40:                dst[0],
        -:   41:                simile_colorizeString(
        -:   42:                    dst[0],
        -:   43:                    " シミリー ",
        -:   44:                    32,
        -:   45:                    i,
        -:   46:                    simile_TERM_COLOR_MOD_ULINE 
        -:   47:                ),
        -:   48:                32,
        8:   49:                7-i,
        -:   50:                simile_TERM_COLOR_MOD_BG
        -:   51:            )
        -:   52:        );
        8:   53:        printf(
        -:   54:            "%s\n",
        -:   55:            simile_colorizeString(
        -:   56:                dst[1],
        -:   57:                simile_colorizeString(
        -:   58:                    dst[1],
        -:   59:                    " シミリー ",
        -:   60:                    32,
        8:   61:                    7-i,
        -:   62:                    0
        -:   63:                ),
        -:   64:                32,
        -:   65:                i,
        -:   66:                (simile_TERM_COLOR_MOD_BG | simile_TERM_COLOR_MOD_BRIGHT)
        -:   67:            )
        -:   68:
        -:   69:        );
        -:   70:    }
       1*:   71:    cr_assert(1);
        1:   72:}
------------------
colors_nesting_jmp:
        1:   34:Test(colors, nesting) {
------------------
